[tox]
envlist =
    clean
    py{37,38,39,310}-django{32}
    coverage-html
skipsdist = True
skip_missing_interpreters = True
basepython = python3.10

[gh-actions]
python =
    3.7: py37
    3.8: py38
    3.9: py39
    3.10: py310

[testenv:clean]
deps =
    coverage
setenv =
commands =
    -coverage erase

[testenv:coverage-html]
basepython = python3.10
deps =
    coverage
setenv =
commands =
    -coverage combine --append
    coverage html --include="./src/*" --omit="*/admin.py,*/test*,*/migrations/*"

[testenv:flake8-critical]
setenv =
basepython = python3.10
deps =
    flake8
commands =
    # stop the build if there are Python syntax errors or undefined names
    flake8 --count --select=E9,F63,F7,F82 --show-source --statistics src/

[testenv:upgrade-deps]
whitelist_externals = cp
deps =
    pip-tools
setenv =

commands =
    pip-compile {posargs} --output-file requirements-django32.txt requirements/django32.txt requirements/base.txt requirements/forced-upgrade.txt
    cp requirements-django32.txt requirements.txt

[testenv:coverage-xml]
basepython = python3.10
deps =
    coverage
setenv =
commands_pre =
commands =
    -coverage combine --append
    coverage xml --include="./src/*" --omit="*/admin.py,*/test*,*/migrations/*"

[testenv]
passenv = DATABASE_URL

deps =
    coverage
    -r requirements-django{env:DJANGO_VER}.txt

setenv =
    LC_ALL=C.UTF-8
    LANG=C.UTF-8
    PYTHONPATH = {toxinidir}/src
    PYTHONWARNINGS=once::DeprecationWarning
    django32: DJANGO_VER=32

commands =
    coverage run -p manage.py test -v 2 --settings=argus.site.settings.test_CI {posargs}

[coverage:run]
source = ./src/.
omit =
    migrations,
    admin.py,
    test*

[coverage:report]
exclude_lines =
    # Ignore not abstract methods, as these cannot be tested
    raise NotImplementedError

[flake8]
max-line-length = 88
filename =
    src/*
extend_exclude =
    *.egg-info,
    *.html,
    *.txt,
    migrations,
    templates
