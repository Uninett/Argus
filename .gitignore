.*

!.git-blame-ignore-revs
!.gitattributes
!.github
!.gitignore
!.pre-commit-config.yaml
!.readthedocs.yaml
!.sonarcloud.properties

# local config files
cmd.sh
localsettings.py

# manually added
npm-debug.log
cloc.xml
pylint.txt
*~
src/argus/version.py

# Created by https://www.gitignore.io/api/venv,django,pycharm+all
# Edit at https://www.gitignore.io/?templates=venv,django,pycharm+all

### Django ###
*.log
*.pot
*.pyc
__pycache__/
local_settings.py
*.sqlite3
*.sqlite3-journal

# If your build process includes running collectstatic, then you probably don't need or want to include staticfiles/
# in your Git repository. Update and uncomment the following line accordingly.
staticfiles/

### Django.Python Stack ###
# Byte-compiled / optimized / DLL files
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
build/
develop-eggs/
dist/
downloads/
eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
nosetests.xml
coverage.xml
*.cover
test-reports/

# Translations
*.mo

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# mkdocs documentation
/site

# mypy
dmypy.json

### PyCharm+all ###
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and WebStorm
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
# .idea/modules.xml
# .idea/*.iml
# .idea/modules
# *.iml
# *.ipr

# CMake
cmake-build-*/

# IntelliJ
out/

# JIRA plugin
atlassian-ide-plugin.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties


*.iml
modules.xml
*.ipr

### venv ###
# Virtualenv
# http://iamzed.com/2009/05/07/a-primer-on-virtualenv/
[Bb]in
[Ii]nclude
[Ll]ib
[Ll]ib64
[Ll]ocal
[Ss]cripts
pyvenv.cfg
env/
venv/
ENV/
env.bak/
venv.bak/
pip-selfcheck.json

# End of https://www.gitignore.io/api/venv,django,pycharm+all
