# Generated by Django 3.2.6 on 2022-01-21 13:11

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


def create_default_media(apps, schema_editor):
    Media = apps.get_model("argus_notificationprofile", "Media")
    db_alias = schema_editor.connection.alias
    Media.objects.using(db_alias).bulk_create(
        [
            Media(slug="email", name="Email"),
            Media(slug="sms", name="SMS"),
        ]
    )


def create_and_link_default_destinations(apps, schema_editor):
    Users = apps.get_model("argus_auth", "User")
    PhoneNumber = apps.get_model("argus_auth", "PhoneNumber")
    DestinationConfig = apps.get_model("argus_notificationprofile", "DestinationConfig")
    Media = apps.get_model("argus_notificationprofile", "Media")
    db_alias = schema_editor.connection.alias
    email = Media.objects.using(db_alias).get(slug="email")
    sms = Media.objects.using(db_alias).get(slug="sms")

    for user in Users.objects.exclude(email=""):
        DestinationConfig.objects.using(db_alias).create(
            user=user,
            media=email,
            settings={
                "email_address": user.email,
                "synced": True,
            },
        )

    for phone_number in PhoneNumber.objects.all():
        DestinationConfig.objects.using(db_alias).create(
            user=phone_number.user,
            media=sms,
            settings={
                "phone_number": str(phone_number.phone_number),
            },
        )


def copy_notificationprofiles_to_destinations(apps, schema_editor):
    DestinationConfig = apps.get_model("argus_notificationprofile", "DestinationConfig")
    Media = apps.get_model("argus_notificationprofile", "Media")
    NotificationProfile = apps.get_model("argus_notificationprofile", "NotificationProfile")
    email = Media.objects.get(slug="email")
    sms = Media.objects.get(slug="sms")

    for profile in NotificationProfile.objects.all():
        if profile.user.email and profile.media_v1 in [["EM", "SM"], ["SM", "EM"], ["EM"]]:
            destination, _ = DestinationConfig.objects.get_or_create(
                user=profile.user,
                media=email,
                settings={
                    "email_address": profile.user.email,
                    "synced": True,
                },
            )
            profile.destinations.add(destination)

        if profile.phone_number and profile.media_v1 in [["EM", "SM"], ["SM", "EM"], ["SM"]]:
            destination, _ = DestinationConfig.objects.get_or_create(
                user=profile.user,
                media=sms,
                settings={
                    "phone_number": str(profile.phone_number.phone_number),
                },
            )
            profile.destinations.add(destination)


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("argus_notificationprofile", "0004_copy_notificationprofile_media_to_media_v1"),
    ]

    operations = [
        migrations.CreateModel(
            name="Media",
            fields=[
                ("slug", models.SlugField(blank=True, max_length=20, primary_key=True)),
                ("name", models.CharField(max_length=20)),
            ],
            options={
                "verbose_name": "Medium",
                "verbose_name_plural": "Media",
            },
        ),
        migrations.CreateModel(
            name="DestinationConfig",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("label", models.CharField(blank=True, max_length=50, null=True)),
                ("settings", models.JSONField()),
                (
                    "media",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="destinations",
                        to="argus_notificationprofile.media",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="destinations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="notificationprofile",
            name="destinations",
            field=models.ManyToManyField(
                blank=True,
                related_name="notification_profile",
                to="argus_notificationprofile.DestinationConfig",
            ),
        ),
        migrations.AddConstraint(
            model_name="destinationconfig",
            constraint=models.UniqueConstraint(fields=("user", "settings"), name="unique_destination_per_user"),
        ),
        migrations.AddConstraint(
            model_name="destinationconfig",
            constraint=models.UniqueConstraint(
                fields=("user", "media", "label"),
                name="unique_label_per_user_and_medium",
            ),
        ),
        migrations.RunPython(create_default_media, migrations.RunPython.noop),
        migrations.RunPython(create_and_link_default_destinations, migrations.RunPython.noop),
        migrations.RunPython(copy_notificationprofiles_to_destinations, migrations.RunPython.noop),
    ]
