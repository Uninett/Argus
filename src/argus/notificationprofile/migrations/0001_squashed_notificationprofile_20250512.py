# Generated by Django 5.2 on 2025-05-12 06:24

import django.contrib.postgres.fields
import django.db.migrations.operations.special
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [('argus_notificationprofile', '0001_squashed_0015_remove_days_alter_days_array'), ('argus_notificationprofile', '0016_noop'), ('argus_notificationprofile', '0017_change_event_type_to_event_types'), ('argus_notificationprofile', '0018_remove_closed_and_unacked_from_filterblob')]

    dependencies = [
        ('argus_auth', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DestinationConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('label', models.CharField(blank=True, max_length=50, null=True)),
                ('settings', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('filter', models.JSONField(default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='filters', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('slug', models.SlugField(blank=True, max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20)),
                ('installed', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Medium',
                'verbose_name_plural': 'Media',
            },
        ),
        migrations.CreateModel(
            name='Timeslot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeslots', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TimeRecurrence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday')]), size=7)),
                ('start', models.TimeField(help_text='Local time.')),
                ('end', models.TimeField(help_text='Local time.')),
                ('timeslot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='time_recurrences', to='argus_notificationprofile.timeslot')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationProfile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=40, null=True)),
                ('active', models.BooleanField(default=True)),
                ('destinations', models.ManyToManyField(blank=True, related_name='notification_profiles', to='argus_notificationprofile.destinationconfig')),
                ('filters', models.ManyToManyField(related_name='notification_profiles', to='argus_notificationprofile.filter')),
                ('timeslot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_profiles', to='argus_notificationprofile.timeslot')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notification_profiles', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='destinationconfig',
            name='media',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destinations', to='argus_notificationprofile.media'),
        ),
        migrations.AddField(
            model_name='destinationconfig',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destinations', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddConstraint(
            model_name='timeslot',
            constraint=models.UniqueConstraint(fields=('name', 'user'), name='timeslot_unique_name_per_user'),
        ),
        migrations.AddConstraint(
            model_name='notificationprofile',
            constraint=models.UniqueConstraint(fields=('user', 'name'), name='unique_name_per_user'),
        ),
        migrations.AddConstraint(
            model_name='filter',
            constraint=models.UniqueConstraint(fields=('name', 'user'), name='filter_unique_name_per_user'),
        ),
        migrations.AddConstraint(
            model_name='destinationconfig',
            constraint=models.UniqueConstraint(fields=('user', 'settings'), name='unique_destination_per_user'),
        ),
        migrations.AddConstraint(
            model_name='destinationconfig',
            constraint=models.UniqueConstraint(fields=('user', 'media', 'label'), name='unique_label_per_user_and_medium'),
        ),
    ]
