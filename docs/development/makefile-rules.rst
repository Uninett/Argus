.. makefile-rules:

==============
Makefile rules
==============

The repo has a ``Makefile`` to help with development. None of the rules depend
on a virtualenv being activated.

Always run ``make`` from the root of the repository.

Rules that delete files
=======================

clean
-----

Deletes files generated by python.

cacheclean
----------

Deletes auto-generated files that aren't covered by any other rule. Good place
for adding new files to delete.

distclean
---------

Deletes files generated on package build, including the packages. Useful
*before* making a new release.

docclean:

Deletes the files generated on running the ``Makefile`` in ``docs/``.

coverageclean
-------------

Deletes files created by ``coverage``, which happens if running tests ``tox``.

testclean
---------

Runs ``coverageclean``, ``clean``, *and* deletes ``.tox``. Useful when there is
*something wrong* when running tests and you need a brutal way to get rid of
extraneous files. ``tox`` will have to spend time on re-building its
virtualenvs afterwards.

nuke
----

Runs all the cleaning jobs. This + ``git stash -u`` should reset the repository
to a pristine state.

Rules that generate files
=========================

tailwind
--------

Assumes that the standalone tailwind CLI client is downloaded and uses the
tailwind configuration in ``src/argus/htmx/tailwindtheme`` to generate
a stylesheet that is put in ``src/argus/htmx/static/styles.css``.


This rule can be used together with the ``tailwind_config`` management command
when when changing styles or themeing::

    $ python3 manage.py tailwind_config && make tailwind
