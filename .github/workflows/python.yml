name: Test django site

on:
  push:
    branches: master
  pull_request:
  schedule: # Run daily at 08:00 CEST (06:00 UST)
    - cron: '0 6 * * *'

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
    - uses: actions/checkout@v4
    - uses: astral-sh/ruff-action@v1
      with:
        changed-files: 'true'

  test:
    needs: lint

    name: "Python ${{ matrix.python-version }}"
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - uses: actions/cache@v4
      id: cache
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Set Environment Variables
      run: |
        echo "DJANGO_SETTINGS_MODULE=argus.site.settings.test_CI" >> $GITHUB_ENV
        echo "POSTGRES_DB=argus_db" >> $GITHUB_ENV
        echo "POSTGRES_USER=argus" >> $GITHUB_ENV
        echo "POSTGRES_PASSWORD=password" >> $GITHUB_ENV

    - name: Install dependencies
      # if: steps.cache.outputs.cache-hit != 'true'
      run: |
        set -xe
        python -VV
        python -m site
        python -m pip install --upgrade pip "setuptools<46" wheel
        python -m pip install --upgrade virtualenv "tox>=4" tox-gh-actions coverage

    - name: Set up PostgreSQL
      uses: harmon758/postgresql-action@v1
      with:
        postgresql db: $POSTGRES_DB
        postgresql user: $POSTGRES_USER
        postgresql password: $POSTGRES_PASSWORD

    - name: Run Tests with PostgreSQL
      env:
        DATABASE_URL: "postgresql://${{ env.POSTGRES_USER }}:${{ env.POSTGRES_PASSWORD }}@localhost/${{ env.POSTGRES_DB }}"
      run: |
        python -m tox

    - name: "Combine coverage"
      run: |
        set -xe
        python -m coverage combine
        python -m coverage xml -o test-reports/${{ matrix.python-version }}/coverage.xml

    - name: Upload test reports (${{ matrix.python-version }})
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-reports-${{ matrix.python-version }}
        path: |
          test-reports/**/*


  upload-pr-number-base-sha:
    name: Save PR number and base SHA in artifact
    runs-on: ubuntu-latest
    if: ${{ github.event.number && always() }}
    env:
      PR_NUMBER: ${{ github.event.number }}
      BASE_SHA: ${{ github.event.pull_request.base.sha }}
    steps:
      - name: Make PR number file
        run: |
          mkdir -p ./extra
          echo $PR_NUMBER > ./extra/pr_number
      - name: Make base SHA file
        run: |
          echo $BASE_SHA > ./extra/base_sha
      - name: Upload PR number file and base SHA file
        uses: actions/upload-artifact@v4
        with:
          name: extra
          path: extra/
