name: build

on: [push, pull_request]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/cache@v2
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}-${{ hashFiles('**/requirements/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set Environment Variables
        run: |
          echo "DJANGO_SETTINGS_MODULE=argus.site.settings.test_CI" >> $GITHUB_ENV
          echo "POSTGRES_DB=argus_db" >> $GITHUB_ENV
          echo "POSTGRES_USER=argus" >> $GITHUB_ENV
          echo "POSTGRES_PASSWORD=password" >> $GITHUB_ENV

      - name: Run Tests
        run: |
          python manage.py collectstatic --no-input
          coverage run -p manage.py test src

      - name: Set up PostgreSQL
        uses: harmon758/postgresql-action@v1
        with:
          postgresql db: $POSTGRES_DB
          postgresql user: $POSTGRES_USER
          postgresql password: $POSTGRES_PASSWORD

      - name: Run Tests with PostgreSQL
        env:
          POSTGRES: true
        run: |
          python manage.py collectstatic --no-input
          coverage run -p manage.py test src
          coverage combine
          coverage xml

      - name: Upload to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
